{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport userAuth from \"./slices/userAuthSlice\";\nimport { thunk } from \"redux-thunk\";\nimport persistReducer from \"redux-persist/es/persistReducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore } from \"redux-persist\";\nimport NoticeSlice from \"./slices/NoticeSlice\";\nimport selectTabSlice from \"./slices/selectTabSlice\";\nimport userAccessSlice from './slices/userAuthSlice';\nconst rootReducer = combineReducers({\n  userAuth,\n  NoticeSlice,\n  selectTabSlice,\n  userAccessSlice\n});\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  whitelist: [\"userAuth\", \"selectTabSlice\"],\n  blacklist: [\"NoticeSlice\", \"userAccessSlice\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleware = [thunk];\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }).concat(middleware)\n});\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","userAuth","thunk","persistReducer","storage","persistStore","NoticeSlice","selectTabSlice","userAccessSlice","rootReducer","persistConfig","key","whitelist","blacklist","persistedReducer","middleware","store","reducer","getDefaultMiddleware","serializableCheck","concat","persistor"],"sources":["/Users/poojasharma/Desktop/loclase react admin panel/localse-admin-panel/src/src/redux/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport userAuth from \"./slices/userAuthSlice\";\nimport { thunk } from \"redux-thunk\";\nimport persistReducer from \"redux-persist/es/persistReducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore } from \"redux-persist\";\nimport NoticeSlice from \"./slices/NoticeSlice\";\nimport selectTabSlice from \"./slices/selectTabSlice\";\nimport userAccessSlice from './slices/userAuthSlice'\nconst rootReducer = combineReducers({\n  userAuth,\n  NoticeSlice,\n  selectTabSlice,\n  userAccessSlice,\n\n});\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  whitelist: [\"userAuth\",\"selectTabSlice\"],\n  blacklist: [\"NoticeSlice\",\"userAccessSlice\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleware = [thunk];\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({ serializableCheck: false }).concat(middleware),\n});\n\nexport const persistor = persistStore(store);\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,eAAe,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,KAAK,QAAQ,aAAa;AACnC,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,eAAe,MAAM,wBAAwB;AACpD,MAAMC,WAAW,GAAGT,eAAe,CAAC;EAClCC,QAAQ;EACRK,WAAW;EACXC,cAAc;EACdC;AAEF,CAAC,CAAC;AAEF,MAAME,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXP,OAAO,EAAEA,OAAO;EAChBQ,SAAS,EAAE,CAAC,UAAU,EAAC,gBAAgB,CAAC;EACxCC,SAAS,EAAE,CAAC,aAAa,EAAC,iBAAiB;AAC7C,CAAC;AAED,MAAMC,gBAAgB,GAAGX,cAAc,CAACO,aAAa,EAAED,WAAW,CAAC;AACnE,MAAMM,UAAU,GAAG,CAACb,KAAK,CAAC;AAE1B,MAAMc,KAAK,GAAGjB,cAAc,CAAC;EAC3BkB,OAAO,EAAEH,gBAAgB;EACzBC,UAAU,EAAGG,oBAAoB,IAC/BA,oBAAoB,CAAC;IAAEC,iBAAiB,EAAE;EAAM,CAAC,CAAC,CAACC,MAAM,CAACL,UAAU;AACxE,CAAC,CAAC;AAEF,OAAO,MAAMM,SAAS,GAAGhB,YAAY,CAACW,KAAK,CAAC;AAC5C,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}