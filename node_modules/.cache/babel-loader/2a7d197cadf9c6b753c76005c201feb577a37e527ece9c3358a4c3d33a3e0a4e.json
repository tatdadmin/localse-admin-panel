{"ast":null,"code":"var _jsxFileName = \"D:\\\\localse\\\\localse-admin-panel\\\\src\\\\src\\\\screens\\\\service providers map\\\\ServiceProvidersMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport { SERVICES_TYPE_GET_MAP_DATA } from '../../apis/Apis';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ServiceProvidersMap = () => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const [selectedProvider, setSelectedProvider] = useState(null);\n  const [serviceProviders, setServiceProviders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [selectedAreaCode, setSelectedAreaCode] = useState('all');\n  const [userLocation, setUserLocation] = useState(null);\n  const [locationLoading, setLocationLoading] = useState(false);\n\n  // Service type colors for markers\n  const serviceColors = {\n    'Bike Mechanic': '#FF6B6B',\n    'Birthday Planner': '#4ECDC4',\n    'Property Dealer': '#45B7D1',\n    'Driver Service': '#96CEB4',\n    'default': '#666'\n  };\n\n  // API call to fetch service providers data\n  const getMapData = async () => {\n    try {\n      setIsLoading(true);\n      const res = await SERVICES_TYPE_GET_MAP_DATA();\n      const providers = (res === null || res === void 0 ? void 0 : res.data) || [];\n      setServiceProviders(providers);\n\n      // Log for debugging\n      console.log('Fetched service providers:', providers.length);\n    } catch (error) {\n      console.error('Error fetching map data:', error);\n      setServiceProviders([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Load data on component mount\n  useEffect(() => {\n    getMapData();\n  }, []);\n\n  // Get user's current location\n  const getCurrentLocation = useCallback(() => {\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by this browser.');\n      return;\n    }\n    setLocationLoading(true);\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setUserLocation([latitude, longitude]);\n      if (mapInstanceRef.current && mapInstanceRef.current._loaded) {\n        mapInstanceRef.current.setView([latitude, longitude], 15);\n        try {\n          // Add user location marker\n          const userIcon = window.L.divIcon({\n            className: 'user-location-marker',\n            html: `\n                <div style=\"\n                  background-color: #007bff;\n                  width: 20px;\n                  height: 20px;\n                  border-radius: 50%;\n                  border: 3px solid white;\n                  box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n                  position: relative;\n                \">\n                  <div style=\"\n                    position: absolute;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%, -50%);\n                    width: 8px;\n                    height: 8px;\n                    background-color: white;\n                    border-radius: 50%;\n                  \"></div>\n                </div>\n              `,\n            iconSize: [20, 20],\n            iconAnchor: [10, 10]\n          });\n          const userMarker = window.L.marker([latitude, longitude], {\n            icon: userIcon\n          });\n          userMarker.addTo(mapInstanceRef.current);\n          userMarker.bindPopup('Your Location');\n        } catch (error) {\n          console.error('Error adding user location marker:', error);\n        }\n      }\n      setLocationLoading(false);\n    }, error => {\n      console.error('Error getting location:', error);\n      alert('Unable to get your location. Please enable location services.');\n      setLocationLoading(false);\n    }\n    // { enableHighAccuracy: true, timeout: 10000, maximumAge: 60000 }\n    );\n  }, []);\n\n  // Filter providers based on selected category and area code\n  const filteredProviders = useMemo(() => {\n    let filtered = [...serviceProviders]; // Create a copy\n\n    console.log('Filtering providers:', {\n      total: serviceProviders.length,\n      selectedCategory,\n      selectedAreaCode\n    });\n\n    // Filter by category - only filter if not 'all'\n    if (selectedCategory !== 'all') {\n      filtered = filtered.filter(provider => provider.service_provider_type === selectedCategory);\n    }\n\n    // Filter by area code - only filter if not 'all'\n    if (selectedAreaCode !== 'all') {\n      filtered = filtered.filter(provider => provider.target_area_code == selectedAreaCode);\n    }\n    console.log('Filtered providers count:', filtered.length);\n    return filtered;\n  }, [serviceProviders, selectedCategory, selectedAreaCode]);\n\n  // Get unique categories from all service providers\n  const categories = useMemo(() => {\n    if (serviceProviders.length === 0) return ['all'];\n    const uniqueCategories = [...new Set(serviceProviders.map(p => p.service_provider_type).filter(Boolean) // Remove null/undefined values\n    )];\n    return ['all', ...uniqueCategories.sort()];\n  }, [serviceProviders]);\n\n  // Get unique area codes from all service providers\n  const areaCodes = useMemo(() => {\n    if (serviceProviders.length === 0) return ['all'];\n    const uniqueAreaCodes = [...new Set(serviceProviders.map(p => p.target_area_code).filter(code => code && code !== 'None') // Remove null, undefined, and 'None'\n    )];\n    return ['all', ...uniqueAreaCodes.sort()];\n  }, [serviceProviders]);\n\n  // Clear all markers from map\n  const clearMarkers = useCallback(() => {\n    markersRef.current.forEach(marker => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.removeLayer(marker);\n      }\n    });\n    markersRef.current = [];\n  }, []);\n\n  // Add markers to map based on filtered providers\n  const addMarkersToMap = useCallback(() => {\n    if (!mapInstanceRef.current || !window.L) {\n      console.warn('Map or Leaflet not ready');\n      return;\n    }\n    console.log('Adding markers for', filteredProviders.length, 'providers');\n\n    // Always clear existing markers first\n    clearMarkers();\n    if (filteredProviders.length === 0) {\n      console.log('No providers to display');\n      return;\n    }\n    const createCustomIcon = (color, serviceType) => {\n      return window.L.divIcon({\n        className: 'custom-marker',\n        html: `\n          <div style=\"\n            background-color: ${color};\n            width: 30px;\n            height: 30px;\n            border-radius: 50%;\n            border: 3px solid white;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-weight: bold;\n            font-size: 12px;\n          \">\n            ${serviceType ? serviceType.charAt(0) : 'S'}\n          </div>\n        `,\n        iconSize: [30, 30],\n        iconAnchor: [15, 15]\n      });\n    };\n    const validProviders = [];\n    filteredProviders.forEach(provider => {\n      if (!provider.business_address_lat_long) {\n        console.warn('Provider missing coordinates:', provider.business_name);\n        return;\n      }\n      const coords = provider.business_address_lat_long.split(',');\n      if (coords.length !== 2) {\n        console.warn('Invalid coordinates format:', provider.business_address_lat_long);\n        return;\n      }\n      const [lat, lng] = coords.map(Number);\n      if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        console.warn('Invalid coordinates values:', lat, lng);\n        return;\n      }\n      validProviders.push(provider);\n      try {\n        const color = serviceColors[provider.service_type] || serviceColors.default;\n        const marker = window.L.marker([lat, lng], {\n          icon: createCustomIcon(color, provider.service_type)\n        });\n        marker.addTo(mapInstanceRef.current);\n        const popupContent = `\n          <div style=\"padding: 8px; min-width: 200px;\">\n            <h6 style=\"margin-bottom: 8px; color: #0d6efd;\">${provider.business_name || 'N/A'}</h6>\n            <p style=\"margin-bottom: 4px;\"><strong>Service:</strong> ${provider.service_type || 'N/A'}</p>\n            <p style=\"margin-bottom: 4px;\"><strong>Mobile:</strong> ${provider.service_provider_mobile_number || 'N/A'}</p>\n            <p style=\"margin-bottom: 4px;\"><strong>Type:</strong> ${provider.service_provider_type || 'N/A'}</p>\n            <p style=\"margin-bottom: 4px;\"><strong>Area Code:</strong> ${provider.target_area_code || 'N/A'}</p>\n            <p style=\"margin-bottom: 0;\"><strong>Location:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n          </div>\n        `;\n        marker.bindPopup(popupContent);\n        marker.on('click', () => {\n          setSelectedProvider(provider);\n        });\n        markersRef.current.push(marker);\n      } catch (error) {\n        console.error('Error creating marker for provider:', provider.business_name, error);\n      }\n    });\n    console.log('Successfully added', validProviders.length, 'markers');\n\n    // Adjust map view to show all markers\n    if (validProviders.length > 0) {\n      try {\n        if (validProviders.length === 1) {\n          const [lat, lng] = validProviders[0].business_address_lat_long.split(',').map(Number);\n          mapInstanceRef.current.setView([lat, lng], 12);\n        } else {\n          const group = new window.L.featureGroup(markersRef.current);\n          mapInstanceRef.current.fitBounds(group.getBounds().pad(0.1));\n        }\n      } catch (error) {\n        console.error('Error adjusting map view:', error);\n      }\n    }\n  }, [filteredProviders, clearMarkers, serviceColors]);\n\n  // Initialize the map\n  const initializeMap = useCallback(() => {\n    if (mapInstanceRef.current) {\n      mapInstanceRef.current.remove();\n    }\n    if (!window.L || !mapRef.current) {\n      console.error('Leaflet not loaded or map ref not available');\n      return;\n    }\n    try {\n      const map = window.L.map(mapRef.current).setView([28.6139, 77.2090], 10);\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '© OpenStreetMap contributors',\n        maxZoom: 100\n      }).addTo(map);\n      mapInstanceRef.current = map;\n\n      // Wait for map to be ready before adding markers\n      map.whenReady(() => {\n        console.log('Map is ready');\n        // Add markers after a short delay to ensure everything is loaded\n        setTimeout(() => {\n          if (filteredProviders.length > 0) {\n            addMarkersToMap();\n          }\n        }, 200);\n      });\n    } catch (error) {\n      console.error('Error initializing map:', error);\n    }\n  }, [addMarkersToMap, filteredProviders]);\n\n  // Load Leaflet and initialize map\n  useEffect(() => {\n    const loadLeaflet = async () => {\n      // Load CSS first\n      if (!document.querySelector('link[href*=\"leaflet\"]')) {\n        const cssLink = document.createElement('link');\n        cssLink.rel = 'stylesheet';\n        cssLink.href = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css';\n        document.head.appendChild(cssLink);\n      }\n\n      // Load JS\n      if (!window.L) {\n        return new Promise(resolve => {\n          const script = document.createElement('script');\n          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js';\n          script.onload = () => {\n            setTimeout(() => {\n              initializeMap();\n              resolve();\n            }, 200);\n          };\n          script.onerror = () => {\n            console.error('Failed to load Leaflet');\n            resolve();\n          };\n          document.head.appendChild(script);\n        });\n      } else {\n        initializeMap();\n      }\n    };\n    loadLeaflet();\n    return () => {\n      clearMarkers();\n      if (mapInstanceRef.current) {\n        try {\n          mapInstanceRef.current.remove();\n        } catch (error) {\n          console.warn('Error removing map:', error);\n        }\n        mapInstanceRef.current = null;\n      }\n    };\n  }, [initializeMap, clearMarkers]);\n\n  // Update markers when filtered providers change\n  useEffect(() => {\n    if (mapInstanceRef.current && mapInstanceRef.current._loaded) {\n      const timeoutId = setTimeout(() => {\n        addMarkersToMap();\n      }, 100);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [filteredProviders, addMarkersToMap]);\n\n  // Calculate service type statistics\n  const getServiceTypeCount = () => {\n    const counts = {};\n    filteredProviders.forEach(provider => {\n      const serviceType = provider.service_type || 'Unknown';\n      counts[serviceType] = (counts[serviceType] || 0) + 1;\n    });\n    return counts;\n  };\n  const serviceCounts = getServiceTypeCount();\n\n  // Reset filters function\n  const resetFilters = () => {\n    setSelectedCategory('all');\n    setSelectedAreaCode('all');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-0\",\n    style: {\n      height: '80vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row g-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 col-lg-3 bg-light border-end overflow-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-border spinner-border-sm\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2 text-muted\",\n              children: \"Loading service providers...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [(selectedCategory !== 'all' || selectedAreaCode !== 'all') && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary btn-sm\",\n                onClick: resetFilters,\n                children: \"Clear Filters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"text-muted\",\n                children: \"Filter by Area Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select form-select-sm\",\n                value: selectedAreaCode,\n                onChange: e => setSelectedAreaCode(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"all\",\n                  children: \"All Area Codes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 21\n                }, this), areaCodes.filter(code => code !== 'all').map(areaCode => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: areaCode,\n                  children: areaCode\n                }, areaCode, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"text-muted\",\n                children: \"Filter by Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select form-select-sm\",\n                value: selectedCategory,\n                onChange: e => setSelectedCategory(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"all\",\n                  children: \"All Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this), categories.filter(category => category !== 'all').map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: category,\n                  children: category\n                }, category, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                maxHeight: '80vh',\n                overflowY: 'auto',\n                paddingRight: '5px'\n              },\n              children: [Object.keys(serviceCounts).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"text-muted\",\n                  children: \"Service Statistics\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 23\n                }, this), Object.entries(serviceCounts).map(([service, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"me-2\",\n                      style: {\n                        width: '12px',\n                        height: '12px',\n                        backgroundColor: serviceColors[service] || serviceColors.default,\n                        borderRadius: '50%'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: service\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge bg-secondary\",\n                    children: count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 27\n                  }, this)]\n                }, service, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 21\n              }, this), !isLoading && filteredProviders.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-muted\",\n                  children: \"No service providers found for the selected filters.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary btn-sm\",\n                  onClick: resetFilters,\n                  children: \"Show All Providers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 col-lg-9 position-relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: mapRef,\n          style: {\n            height: '100vh',\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-absolute top-50 start-50 translate-middle\",\n          style: {\n            zIndex: 1000\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-border\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2\",\n              children: \"Loading map...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n};\n_s(ServiceProvidersMap, \"seigiCclXXbHTy2mx271LbLXeq4=\");\n_c = ServiceProvidersMap;\nexport default ServiceProvidersMap;\nvar _c;\n$RefreshReg$(_c, \"ServiceProvidersMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useMemo","SERVICES_TYPE_GET_MAP_DATA","jsxDEV","_jsxDEV","Fragment","_Fragment","ServiceProvidersMap","_s","mapRef","mapInstanceRef","markersRef","selectedProvider","setSelectedProvider","serviceProviders","setServiceProviders","isLoading","setIsLoading","selectedCategory","setSelectedCategory","selectedAreaCode","setSelectedAreaCode","userLocation","setUserLocation","locationLoading","setLocationLoading","serviceColors","getMapData","res","providers","data","console","log","length","error","getCurrentLocation","navigator","geolocation","alert","getCurrentPosition","position","latitude","longitude","coords","current","_loaded","setView","userIcon","window","L","divIcon","className","html","iconSize","iconAnchor","userMarker","marker","icon","addTo","bindPopup","filteredProviders","filtered","total","filter","provider","service_provider_type","target_area_code","categories","uniqueCategories","Set","map","p","Boolean","sort","areaCodes","uniqueAreaCodes","code","clearMarkers","forEach","removeLayer","addMarkersToMap","warn","createCustomIcon","color","serviceType","charAt","validProviders","business_address_lat_long","business_name","split","lat","lng","Number","isNaN","push","service_type","default","popupContent","service_provider_mobile_number","toFixed","on","group","featureGroup","fitBounds","getBounds","pad","initializeMap","remove","tileLayer","attribution","maxZoom","whenReady","setTimeout","loadLeaflet","document","querySelector","cssLink","createElement","rel","href","head","appendChild","Promise","resolve","script","src","onload","onerror","timeoutId","clearTimeout","getServiceTypeCount","counts","serviceCounts","resetFilters","style","height","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","areaCode","category","maxHeight","overflowY","paddingRight","Object","keys","entries","service","count","width","backgroundColor","borderRadius","ref","zIndex","_c","$RefreshReg$"],"sources":["D:/localse/localse-admin-panel/src/src/screens/service providers map/ServiceProvidersMap.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';\r\nimport { SERVICES_TYPE_GET_MAP_DATA } from '../../apis/Apis';\r\n\r\nconst ServiceProvidersMap = () => {\r\n  const mapRef = useRef(null);\r\n  const mapInstanceRef = useRef(null);\r\n  const markersRef = useRef([]);\r\n  const [selectedProvider, setSelectedProvider] = useState(null);\r\n  const [serviceProviders, setServiceProviders] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [selectedAreaCode, setSelectedAreaCode] = useState('all');\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [locationLoading, setLocationLoading] = useState(false);\r\n\r\n  // Service type colors for markers\r\n  const serviceColors = {\r\n    'Bike Mechanic': '#FF6B6B',\r\n    'Birthday Planner': '#4ECDC4',\r\n    'Property Dealer': '#45B7D1',\r\n    'Driver Service': '#96CEB4',\r\n    'default': '#666'\r\n  };\r\n\r\n  // API call to fetch service providers data\r\n  const getMapData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await SERVICES_TYPE_GET_MAP_DATA();\r\n      const providers = res?.data || [];\r\n      setServiceProviders(providers);\r\n      \r\n      // Log for debugging\r\n      console.log('Fetched service providers:', providers.length);\r\n    } catch (error) {\r\n      console.error('Error fetching map data:', error);\r\n      setServiceProviders([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load data on component mount\r\n  useEffect(() => {\r\n    getMapData();\r\n  }, []);\r\n\r\n  // Get user's current location\r\n  const getCurrentLocation = useCallback(() => {\r\n    if (!navigator.geolocation) {\r\n      alert('Geolocation is not supported by this browser.');\r\n      return;\r\n    }\r\n\r\n    setLocationLoading(true);\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation([latitude, longitude]);\r\n        \r\n        if (mapInstanceRef.current && mapInstanceRef.current._loaded) {\r\n          mapInstanceRef.current.setView([latitude, longitude], 15);\r\n          \r\n          try {\r\n            // Add user location marker\r\n            const userIcon = window.L.divIcon({\r\n              className: 'user-location-marker',\r\n              html: `\r\n                <div style=\"\r\n                  background-color: #007bff;\r\n                  width: 20px;\r\n                  height: 20px;\r\n                  border-radius: 50%;\r\n                  border: 3px solid white;\r\n                  box-shadow: 0 2px 5px rgba(0,0,0,0.3);\r\n                  position: relative;\r\n                \">\r\n                  <div style=\"\r\n                    position: absolute;\r\n                    top: 50%;\r\n                    left: 50%;\r\n                    transform: translate(-50%, -50%);\r\n                    width: 8px;\r\n                    height: 8px;\r\n                    background-color: white;\r\n                    border-radius: 50%;\r\n                  \"></div>\r\n                </div>\r\n              `,\r\n              iconSize: [20, 20],\r\n              iconAnchor: [10, 10]\r\n            });\r\n\r\n            const userMarker = window.L.marker([latitude, longitude], { icon: userIcon });\r\n            userMarker.addTo(mapInstanceRef.current);\r\n            userMarker.bindPopup('Your Location');\r\n          } catch (error) {\r\n            console.error('Error adding user location marker:', error);\r\n          }\r\n        }\r\n        \r\n        setLocationLoading(false);\r\n      },\r\n      (error) => {\r\n        console.error('Error getting location:', error);\r\n        alert('Unable to get your location. Please enable location services.');\r\n        setLocationLoading(false);\r\n      },\r\n      // { enableHighAccuracy: true, timeout: 10000, maximumAge: 60000 }\r\n    );\r\n  }, []);\r\n\r\n  // Filter providers based on selected category and area code\r\n  const filteredProviders = useMemo(() => {\r\n    let filtered = [...serviceProviders]; // Create a copy\r\n    \r\n    console.log('Filtering providers:', {\r\n      total: serviceProviders.length,\r\n      selectedCategory,\r\n      selectedAreaCode\r\n    });\r\n    \r\n    // Filter by category - only filter if not 'all'\r\n    if (selectedCategory !== 'all') {\r\n      filtered = filtered.filter(provider => \r\n        provider.service_provider_type === selectedCategory\r\n      );\r\n    }\r\n    \r\n    // Filter by area code - only filter if not 'all'\r\n    if (selectedAreaCode !== 'all') {\r\n      filtered = filtered.filter(provider => \r\n        provider.target_area_code == selectedAreaCode\r\n      );\r\n    }\r\n    \r\n    console.log('Filtered providers count:', filtered.length);\r\n    return filtered;\r\n  }, [serviceProviders, selectedCategory, selectedAreaCode]);\r\n\r\n  // Get unique categories from all service providers\r\n  const categories = useMemo(() => {\r\n    if (serviceProviders.length === 0) return ['all'];\r\n    \r\n    const uniqueCategories = [...new Set(\r\n      serviceProviders\r\n        .map(p => p.service_provider_type)\r\n        .filter(Boolean) // Remove null/undefined values\r\n    )];\r\n    \r\n    return ['all', ...uniqueCategories.sort()];\r\n  }, [serviceProviders]);\r\n\r\n  // Get unique area codes from all service providers\r\n  const areaCodes = useMemo(() => {\r\n    if (serviceProviders.length === 0) return ['all'];\r\n    \r\n    const uniqueAreaCodes = [...new Set(\r\n      serviceProviders\r\n        .map(p => p.target_area_code)\r\n        .filter(code => code && code !== 'None') // Remove null, undefined, and 'None'\r\n    )];\r\n    \r\n    return ['all', ...uniqueAreaCodes.sort()];\r\n  }, [serviceProviders]);\r\n\r\n  // Clear all markers from map\r\n  const clearMarkers = useCallback(() => {\r\n    markersRef.current.forEach(marker => {\r\n      if (mapInstanceRef.current) {\r\n        mapInstanceRef.current.removeLayer(marker);\r\n      }\r\n    });\r\n    markersRef.current = [];\r\n  }, []);\r\n\r\n  // Add markers to map based on filtered providers\r\n  const addMarkersToMap = useCallback(() => {\r\n    if (!mapInstanceRef.current || !window.L) {\r\n      console.warn('Map or Leaflet not ready');\r\n      return;\r\n    }\r\n\r\n    console.log('Adding markers for', filteredProviders.length, 'providers');\r\n\r\n    // Always clear existing markers first\r\n    clearMarkers();\r\n\r\n    if (filteredProviders.length === 0) {\r\n      console.log('No providers to display');\r\n      return;\r\n    }\r\n\r\n    const createCustomIcon = (color, serviceType) => {\r\n      return window.L.divIcon({\r\n        className: 'custom-marker',\r\n        html: `\r\n          <div style=\"\r\n            background-color: ${color};\r\n            width: 30px;\r\n            height: 30px;\r\n            border-radius: 50%;\r\n            border: 3px solid white;\r\n            box-shadow: 0 2px 5px rgba(0,0,0,0.3);\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            color: white;\r\n            font-weight: bold;\r\n            font-size: 12px;\r\n          \">\r\n            ${serviceType ? serviceType.charAt(0) : 'S'}\r\n          </div>\r\n        `,\r\n        iconSize: [30, 30],\r\n        iconAnchor: [15, 15]\r\n      });\r\n    };\r\n\r\n    const validProviders = [];\r\n\r\n    filteredProviders.forEach((provider) => {\r\n      if (!provider.business_address_lat_long) {\r\n        console.warn('Provider missing coordinates:', provider.business_name);\r\n        return;\r\n      }\r\n\r\n      const coords = provider.business_address_lat_long.split(',');\r\n      if (coords.length !== 2) {\r\n        console.warn('Invalid coordinates format:', provider.business_address_lat_long);\r\n        return;\r\n      }\r\n\r\n      const [lat, lng] = coords.map(Number);\r\n      \r\n      if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\r\n        console.warn('Invalid coordinates values:', lat, lng);\r\n        return;\r\n      }\r\n\r\n      validProviders.push(provider);\r\n      \r\n      try {\r\n        const color = serviceColors[provider.service_type] || serviceColors.default;\r\n        \r\n        const marker = window.L.marker([lat, lng], {\r\n          icon: createCustomIcon(color, provider.service_type)\r\n        });\r\n\r\n        marker.addTo(mapInstanceRef.current);\r\n\r\n        const popupContent = `\r\n          <div style=\"padding: 8px; min-width: 200px;\">\r\n            <h6 style=\"margin-bottom: 8px; color: #0d6efd;\">${provider.business_name || 'N/A'}</h6>\r\n            <p style=\"margin-bottom: 4px;\"><strong>Service:</strong> ${provider.service_type || 'N/A'}</p>\r\n            <p style=\"margin-bottom: 4px;\"><strong>Mobile:</strong> ${provider.service_provider_mobile_number || 'N/A'}</p>\r\n            <p style=\"margin-bottom: 4px;\"><strong>Type:</strong> ${provider.service_provider_type || 'N/A'}</p>\r\n            <p style=\"margin-bottom: 4px;\"><strong>Area Code:</strong> ${provider.target_area_code || 'N/A'}</p>\r\n            <p style=\"margin-bottom: 0;\"><strong>Location:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\r\n          </div>\r\n        `;\r\n\r\n        marker.bindPopup(popupContent);\r\n        \r\n        marker.on('click', () => {\r\n          setSelectedProvider(provider);\r\n        });\r\n\r\n        markersRef.current.push(marker);\r\n      } catch (error) {\r\n        console.error('Error creating marker for provider:', provider.business_name, error);\r\n      }\r\n    });\r\n\r\n    console.log('Successfully added', validProviders.length, 'markers');\r\n\r\n    // Adjust map view to show all markers\r\n    if (validProviders.length > 0) {\r\n      try {\r\n        if (validProviders.length === 1) {\r\n          const [lat, lng] = validProviders[0].business_address_lat_long.split(',').map(Number);\r\n          mapInstanceRef.current.setView([lat, lng], 12);\r\n        } else {\r\n          const group = new window.L.featureGroup(markersRef.current);\r\n          mapInstanceRef.current.fitBounds(group.getBounds().pad(0.1));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error adjusting map view:', error);\r\n      }\r\n    }\r\n  }, [filteredProviders, clearMarkers, serviceColors]);\r\n\r\n  // Initialize the map\r\n  const initializeMap = useCallback(() => {\r\n    if (mapInstanceRef.current) {\r\n      mapInstanceRef.current.remove();\r\n    }\r\n\r\n    if (!window.L || !mapRef.current) {\r\n      console.error('Leaflet not loaded or map ref not available');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const map = window.L.map(mapRef.current).setView([28.6139, 77.2090], 10);\r\n\r\n      window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '© OpenStreetMap contributors',\r\n        maxZoom: 100\r\n      }).addTo(map);\r\n\r\n      mapInstanceRef.current = map;\r\n      \r\n      // Wait for map to be ready before adding markers\r\n      map.whenReady(() => {\r\n        console.log('Map is ready');\r\n        // Add markers after a short delay to ensure everything is loaded\r\n        setTimeout(() => {\r\n          if (filteredProviders.length > 0) {\r\n            addMarkersToMap();\r\n          }\r\n        }, 200);\r\n      });\r\n    } catch (error) {\r\n      console.error('Error initializing map:', error);\r\n    }\r\n  }, [addMarkersToMap, filteredProviders]);\r\n\r\n  // Load Leaflet and initialize map\r\n  useEffect(() => {\r\n    const loadLeaflet = async () => {\r\n      // Load CSS first\r\n      if (!document.querySelector('link[href*=\"leaflet\"]')) {\r\n        const cssLink = document.createElement('link');\r\n        cssLink.rel = 'stylesheet';\r\n        cssLink.href = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css';\r\n        document.head.appendChild(cssLink);\r\n      }\r\n\r\n      // Load JS\r\n      if (!window.L) {\r\n        return new Promise((resolve) => {\r\n          const script = document.createElement('script');\r\n          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js';\r\n          script.onload = () => {\r\n            setTimeout(() => {\r\n              initializeMap();\r\n              resolve();\r\n            }, 200);\r\n          };\r\n          script.onerror = () => {\r\n            console.error('Failed to load Leaflet');\r\n            resolve();\r\n          };\r\n          document.head.appendChild(script);\r\n        });\r\n      } else {\r\n        initializeMap();\r\n      }\r\n    };\r\n\r\n    loadLeaflet();\r\n\r\n    return () => {\r\n      clearMarkers();\r\n      if (mapInstanceRef.current) {\r\n        try {\r\n          mapInstanceRef.current.remove();\r\n        } catch (error) {\r\n          console.warn('Error removing map:', error);\r\n        }\r\n        mapInstanceRef.current = null;\r\n      }\r\n    };\r\n  }, [initializeMap, clearMarkers]);\r\n\r\n  // Update markers when filtered providers change\r\n  useEffect(() => {\r\n    if (mapInstanceRef.current && mapInstanceRef.current._loaded) {\r\n      const timeoutId = setTimeout(() => {\r\n        addMarkersToMap();\r\n      }, 100);\r\n      \r\n      return () => clearTimeout(timeoutId);\r\n    }\r\n  }, [filteredProviders, addMarkersToMap]);\r\n\r\n  // Calculate service type statistics\r\n  const getServiceTypeCount = () => {\r\n    const counts = {};\r\n    filteredProviders.forEach(provider => {\r\n      const serviceType = provider.service_type || 'Unknown';\r\n      counts[serviceType] = (counts[serviceType] || 0) + 1;\r\n    });\r\n    return counts;\r\n  };\r\n\r\n  const serviceCounts = getServiceTypeCount();\r\n\r\n  // Reset filters function\r\n  const resetFilters = () => {\r\n    setSelectedCategory('all');\r\n    setSelectedAreaCode('all');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0\" style={{ height: '80vh' }}>\r\n      <div className=\"row g-0\">\r\n        {/* Sidebar */}\r\n        <div className=\"col-md-4 col-lg-3 bg-light border-end overflow-auto\">\r\n          <div className=\"p-3\">\r\n            \r\n            \r\n            {isLoading ? (\r\n              <div className=\"text-center\">\r\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <p className=\"mt-2 text-muted\">Loading service providers...</p>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {/* Reset Filters Button */}\r\n                {(selectedCategory !== 'all' || selectedAreaCode !== 'all') && (\r\n                  <div className=\"mb-3\">\r\n                    <button \r\n                      className=\"btn btn-outline-secondary btn-sm\"\r\n                      onClick={resetFilters}\r\n                    >\r\n                      Clear Filters\r\n                    </button>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Area Code Filter */}\r\n                <div className=\"mb-4\">\r\n                  <h6 className=\"text-muted\">Filter by Area Code</h6>\r\n                  <select \r\n                    className=\"form-select form-select-sm\"\r\n                    value={selectedAreaCode}\r\n                    onChange={(e) => setSelectedAreaCode(e.target.value)}\r\n                  >\r\n                    <option value=\"all\">All Area Codes</option>\r\n                    {areaCodes.filter(code => code !== 'all').map(areaCode => (\r\n                      <option key={areaCode} value={areaCode}>\r\n                        {areaCode}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                {/* Category Filter */}\r\n                <div className=\"mb-4\">\r\n                  <h6 className=\"text-muted\">Filter by Type</h6>\r\n                  <select \r\n                    className=\"form-select form-select-sm\"\r\n                    value={selectedCategory}\r\n                    onChange={(e) => setSelectedCategory(e.target.value)}\r\n                  >\r\n                    <option value=\"all\">All Types</option>\r\n                    {categories.filter(category => category !== 'all').map(category => (\r\n                      <option key={category} value={category}>\r\n                        {category}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                {/* Statistics */}\r\n                <div style={{ maxHeight: '80vh', overflowY: 'auto', paddingRight: '5px' }}>\r\n                  {Object.keys(serviceCounts).length > 0 && (\r\n                    <div className=\"mb-4\">\r\n                      <h6 className=\"text-muted\">Service Statistics</h6>\r\n                      {Object.entries(serviceCounts).map(([service, count]) => (\r\n                        <div key={service} className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                          <div className=\"d-flex align-items-center\">\r\n                            <div \r\n                              className=\"me-2\"\r\n                              style={{\r\n                                width: '12px',\r\n                                height: '12px',\r\n                                backgroundColor: serviceColors[service] || serviceColors.default,\r\n                                borderRadius: '50%'\r\n                              }}\r\n                            ></div>\r\n                            <small>{service}</small>\r\n                          </div>\r\n                          <span className=\"badge bg-secondary\">{count}</span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* No Results Message */}\r\n                  {!isLoading && filteredProviders.length === 0 && (\r\n                    <div className=\"text-center p-3\">\r\n                      <p className=\"text-muted\">No service providers found for the selected filters.</p>\r\n                      <button \r\n                        className=\"btn btn-primary btn-sm\"\r\n                        onClick={resetFilters}\r\n                      >\r\n                        Show All Providers\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Map */}\r\n        <div className=\"col-md-8 col-lg-9 position-relative\">\r\n          <div \r\n            ref={mapRef} \r\n            style={{ \r\n              height: '100vh', \r\n              width: '100%' \r\n            }}\r\n          ></div>\r\n          \r\n          {/* Get My Location Button */}\r\n          {/* <button\r\n            className={`btn btn-primary position-absolute ${locationLoading ? 'disabled' : ''}`}\r\n            style={{ \r\n              bottom: '150px', \r\n              right: '20px', \r\n              zIndex: 1000,\r\n              width: '50px',\r\n              height: '50px',\r\n              borderRadius: '50%',\r\n              boxShadow: '0 2px 10px rgba(0,0,0,0.3)'\r\n            }}\r\n            onClick={getCurrentLocation}\r\n            disabled={locationLoading}\r\n            title=\"Get My Location\" \r\n          >\r\n            {locationLoading ? (\r\n              <div className=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            ) : (\r\n              <i className=\"fas fa-crosshairs\" style={{ fontSize: '18px' }}>📍</i>\r\n            )}\r\n          </button> */}\r\n\r\n          {isLoading && (\r\n            <div \r\n              className=\"position-absolute top-50 start-50 translate-middle\"\r\n              style={{ zIndex: 1000 }}\r\n            >\r\n              <div className=\"text-center\">\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <p className=\"mt-2\">Loading map...</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServiceProvidersMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}