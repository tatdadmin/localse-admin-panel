{"ast":null,"code":"var _jsxFileName = \"/Users/poojasharma/Desktop/loclase react admin panel/localse-admin-panel/src/src/screens/EmployeeAccess/index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { FETCH_ACCESS_BY_EMAIL, GET_ALL_EMPLOYEE, GET_ALL_EMPLOYEE_ACCESS, GIVE_ACCESS_FOR_EMPLOYEE } from \"../../apis/Apis\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmployeeAccess = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [modalData, setModalData] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showGiveAccessModal, setShowGiveAccessModal] = useState(false);\n  const [allTasks, setAllTasks] = useState([]);\n  const [taskOrders, setTaskOrders] = useState({});\n  const [existingAccess, setExistingAccess] = useState([]); // Store existing access data\n\n  // Unique loading states\n  const [loadingAccess, setLoadingAccess] = useState({}); // For individual \"Get Access\" buttons\n  const [loadingGiveAccess, setLoadingGiveAccess] = useState({}); // For individual \"Give Access\" buttons\n  const [loadingAllAccess, setLoadingAllAccess] = useState(false); // For fetching all tasks\n  const [savingAccess, setSavingAccess] = useState(false); // For saving access\n  const [loadingExistingAccess, setLoadingExistingAccess] = useState(false); // For fetching existing access\n\n  // Check if any loading is active\n  const isAnyLoading = () => {\n    return loading || Object.values(loadingAccess).some(Boolean) || Object.values(loadingGiveAccess).some(Boolean) || loadingAllAccess || savingAccess || loadingExistingAccess;\n  };\n  const getData = async () => {\n    try {\n      setLoading(true);\n      const res = await GET_ALL_EMPLOYEE();\n      if (res.status_code === 200) {\n        setEmployees(res.data);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getAccessOfEmployee = async (email, name) => {\n    if (!email) {\n      alert('Employee email is not available');\n      return;\n    }\n    try {\n      setLoadingAccess(prev => ({\n        ...prev,\n        [email]: true\n      }));\n      setSelectedEmployee({\n        name,\n        email\n      });\n      const res = await FETCH_ACCESS_BY_EMAIL({\n        employee_email: email\n      });\n      if (res.status_code === 200) {\n        setModalData(res.data);\n        setShowModal(true);\n      }\n    } catch (error) {\n      console.log(error);\n      alert('Error fetching employee access data');\n    } finally {\n      setLoadingAccess(prev => ({\n        ...prev,\n        [email]: false\n      }));\n    }\n  };\n  const getExistingAccess = async email => {\n    try {\n      setLoadingExistingAccess(true);\n      const res = await FETCH_ACCESS_BY_EMAIL({\n        employee_email: email\n      });\n      if (res.status_code === 200) {\n        return res.data || [];\n      }\n      return [];\n    } catch (error) {\n      console.log(error);\n      return [];\n    } finally {\n      setLoadingExistingAccess(false);\n    }\n  };\n  const getAllAccess = async () => {\n    try {\n      setLoadingAllAccess(true);\n      const res = await GET_ALL_EMPLOYEE_ACCESS();\n      if (res.status_code === 200) {\n        return res.data || [];\n      }\n      return [];\n    } catch (error) {\n      console.log(error);\n      alert('Error fetching available tasks');\n      return [];\n    } finally {\n      setLoadingAllAccess(false);\n    }\n  };\n  const handleGiveAccess = async (email, name) => {\n    if (!email) {\n      alert('Employee email is not available');\n      return;\n    }\n    setLoadingGiveAccess(prev => ({\n      ...prev,\n      [email]: true\n    }));\n    setSelectedEmployee({\n      name,\n      email\n    });\n    try {\n      // First get existing access\n      const existingAccessData = await getExistingAccess(email);\n      setExistingAccess(existingAccessData);\n\n      // Then get all available tasks\n      const allTasksData = await getAllAccess();\n      setAllTasks(allTasksData);\n\n      // Pre-fill orders for existing tasks\n      const initialOrders = {};\n      existingAccessData.forEach(access => {\n        // Find matching task by task_name or task_url\n        const matchingTask = allTasksData.find(task => task.task_name === access.task_name || task.task_url === access.task_url);\n        if (matchingTask) {\n          initialOrders[matchingTask._id] = access.order;\n        }\n      });\n      setTaskOrders(initialOrders);\n      setShowGiveAccessModal(true);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoadingGiveAccess(prev => ({\n        ...prev,\n        [email]: false\n      }));\n    }\n  };\n  const handleOrderChange = (taskId, order) => {\n    const orderNum = parseInt(order);\n\n    // Update task orders\n    setTaskOrders(prev => ({\n      ...prev,\n      [taskId]: orderNum || ''\n    }));\n  };\n  const handleRemoveTask = taskId => {\n    setTaskOrders(prev => {\n      const newOrders = {\n        ...prev\n      };\n      delete newOrders[taskId];\n      return newOrders;\n    });\n  };\n  const closeGiveAccessModal = () => {\n    setShowGiveAccessModal(false);\n    setAllTasks([]);\n    setSelectedEmployee(null);\n    setTaskOrders({});\n    setExistingAccess([]);\n  };\n\n  // Check if task has existing access\n  const hasExistingAccess = task => {\n    return existingAccess.some(access => access.task_name === task.task_name || access.task_url === task.task_url);\n  };\n\n  // Sort tasks: selected tasks first, then unselected tasks\n  const getSortedTasks = () => {\n    if (!allTasks || allTasks.length === 0) return [];\n    const selectedTasks = [];\n    const unselectedTasks = [];\n    allTasks.forEach(task => {\n      const hasOrder = taskOrders[task._id] !== undefined && taskOrders[task._id] !== '';\n      if (hasOrder) {\n        selectedTasks.push(task);\n      } else {\n        unselectedTasks.push(task);\n      }\n    });\n\n    // Sort selected tasks by their order value\n    selectedTasks.sort((a, b) => {\n      const orderA = taskOrders[a._id] || 0;\n      const orderB = taskOrders[b._id] || 0;\n      return orderA - orderB;\n    });\n    return [...selectedTasks, ...unselectedTasks];\n  };\n\n  // Updated function to call the API with actual data\n  const giveAccessToEmp = async (employeeEmail, tasksToAssign) => {\n    try {\n      setSavingAccess(true);\n      const res = await GIVE_ACCESS_FOR_EMPLOYEE({\n        employee_email: employeeEmail,\n        tasks: tasksToAssign\n      });\n      if (res.status_code === 200) {\n        alert(`Successfully assigned ${tasksToAssign.length} tasks to ${selectedEmployee.name}`);\n        closeGiveAccessModal();\n        // Optionally refresh the employee list or their access data\n        getData();\n      } else {\n        alert('Failed to assign access. Please try again.');\n      }\n    } catch (error) {\n      console.log(\"EERR\", error);\n      alert(error.message);\n      alert('Error occurred while assigning access');\n    } finally {\n      setSavingAccess(false);\n    }\n  };\n  const handleSaveAccess = () => {\n    // Get tasks with valid orders\n    const tasksWithOrders = Object.entries(taskOrders).filter(([_, order]) => order !== '' && !isNaN(order)).map(([taskId, order]) => {\n      const task = allTasks.find(t => t._id === taskId);\n      return {\n        task_name: task.task_name,\n        task_url: task.task_url,\n        order: parseInt(order)\n      };\n    });\n    if (tasksWithOrders.length === 0) {\n      alert('Please assign at least one task with a valid order');\n      return;\n    }\n\n    // Call the API function with actual data\n    giveAccessToEmp(selectedEmployee.email, tasksWithOrders);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setModalData([]);\n    setSelectedEmployee(null);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-4\",\n            children: \"Employee Access Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-primary text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title mb-0\",\n                children: \"Employees List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body p-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-striped table-hover mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    className: \"table-dark\",\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"#\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Actions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: employees.map((employee, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"row\",\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 301,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: employee.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 303,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 302,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: employee.email ? /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"badge bg-success\",\n                          children: employee.email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 307,\n                          columnNumber: 61\n                        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"badge bg-warning text-dark\",\n                          children: \"No Email\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 309,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"btn-group\",\n                          role: \"group\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            className: \"btn btn-info btn-sm me-2\",\n                            onClick: () => getAccessOfEmployee(employee.email, employee.name),\n                            disabled: !employee.email || isAnyLoading(),\n                            children: [loadingAccess[employee.email] ? /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"spinner-border spinner-border-sm me-1\",\n                              role: \"status\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 321,\n                              columnNumber: 69\n                            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-eye me-1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 323,\n                              columnNumber: 69\n                            }, this), \"Get Access\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 314,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            className: \"btn btn-success btn-sm\",\n                            onClick: () => handleGiveAccess(employee.email, employee.name),\n                            disabled: !employee.email || isAnyLoading(),\n                            children: [loadingGiveAccess[employee.email] ? /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"spinner-border spinner-border-sm me-1\",\n                              role: \"status\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 334,\n                              columnNumber: 69\n                            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-plus-circle me-1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 336,\n                              columnNumber: 69\n                            }, this), \"Give Access\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 327,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 313,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 53\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      tabIndex: \"-1\",\n      style: {\n        backgroundColor: 'rgba(0,0,0,0.5)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header bg-primary text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"Access Details for \", selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close btn-close-white\",\n              onClick: closeModal,\n              disabled: isAnyLoading()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [selectedEmployee && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Employee:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 45\n                }, this), \" \", selectedEmployee.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 45\n                }, this), \" \", selectedEmployee.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 37\n            }, this), modalData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-responsive\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-bordered\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"table-light\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Task Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Task URL\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Order\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Created At\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: modalData.sort((a, b) => a.order - b.order).map((access, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"badge bg-primary\",\n                        children: access.task_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 398,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"code\", {\n                        children: access.task_url\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 403,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"badge bg-secondary\",\n                        children: access.order\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: new Date(access.createdAt).toLocaleDateString('en-IN', {\n                        year: 'numeric',\n                        timeZone: 'UTC',\n                        month: 'short',\n                        day: 'numeric',\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 57\n                    }, this)]\n                  }, access._id || index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-exclamation-triangle text-warning\",\n                style: {\n                  fontSize: '3rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mt-3\",\n                children: \"No Access Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted\",\n                children: \"This employee doesn't have any access permissions assigned.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: closeModal,\n              disabled: isAnyLoading(),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }, this), showGiveAccessModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      tabIndex: \"-1\",\n      style: {\n        backgroundColor: 'rgba(0,0,0,0.5)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-xl\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header bg-success text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"Give Access to \", selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close btn-close-white\",\n              onClick: closeGiveAccessModal,\n              disabled: isAnyLoading()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            style: {\n              maxHeight: '70vh',\n              overflowY: 'auto'\n            },\n            children: [selectedEmployee && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Employee:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 49\n                  }, this), \" \", selectedEmployee.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Email:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 49\n                  }, this), \" \", selectedEmployee.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-info\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Note:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 45\n                  }, this), \" Assign order numbers to the tasks you want to give access to. Tasks with existing access are pre-filled and highlighted. Selected tasks appear at the top.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 33\n            }, this), loadingExistingAccess || loadingAllAccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner-border text-primary\",\n                role: \"status\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"visually-hidden\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2\",\n                children: loadingExistingAccess ? 'Loading existing access...' : 'Loading available tasks...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 37\n            }, this) : allTasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-responsive\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-striped\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"table-dark\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Task Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 501,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Task URL\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Task Purpose\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Order\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: getSortedTasks().map(task => {\n                    const isExisting = hasExistingAccess(task);\n                    const hasOrder = taskOrders[task._id] !== undefined && taskOrders[task._id] !== '';\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: `${isExisting ? 'table-warning' : ''} ${hasOrder && !isExisting ? 'table-success' : ''}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: task.task_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 515,\n                          columnNumber: 65\n                        }, this), isExisting && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"badge bg-warning text-dark ms-2\",\n                          children: \"Existing\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 517,\n                          columnNumber: 69\n                        }, this), hasOrder && !isExisting && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"badge bg-success ms-2\",\n                          children: \"Selected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 520,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 514,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"code\", {\n                          className: \"text-primary\",\n                          children: task.task_url\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 524,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"small\", {\n                          className: \"text-muted\",\n                          children: task.task_purpose\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 527,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 526,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: '150px'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"input-group input-group-sm\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"number\",\n                            className: `form-control ${hasOrder ? 'is-valid' : ''}`,\n                            placeholder: \"Order\",\n                            min: \"1\",\n                            value: taskOrders[task._id] || '',\n                            onChange: e => handleOrderChange(task._id, e.target.value),\n                            disabled: isAnyLoading()\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 531,\n                            columnNumber: 69\n                          }, this), hasOrder && /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            className: \"btn btn-outline-danger btn-sm\",\n                            onClick: () => handleRemoveTask(task._id),\n                            disabled: isAnyLoading(),\n                            title: \"Remove task\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-x-lg\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 550,\n                              columnNumber: 77\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 543,\n                            columnNumber: 73\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 530,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 529,\n                        columnNumber: 61\n                      }, this)]\n                    }, task._id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 57\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-exclamation-triangle text-warning\",\n                style: {\n                  fontSize: '3rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mt-3\",\n                children: \"No Tasks Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted\",\n                children: \"No tasks are available to assign.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: closeGiveAccessModal,\n              disabled: isAnyLoading(),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              onClick: handleSaveAccess,\n              disabled: Object.keys(taskOrders).length === 0 || isAnyLoading(),\n              children: savingAccess ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"spinner-border spinner-border-sm me-1\",\n                  role: \"status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 45\n                }, this), \"Saving...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-circle me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 45\n                }, this), \"Save Access (\", Object.keys(taskOrders).length, \" tasks)\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(EmployeeAccess, \"vv2tV2Xcpb3WXUFM0EjJuqk69iY=\");\n_c = EmployeeAccess;\nexport default EmployeeAccess;\nvar _c;\n$RefreshReg$(_c, \"EmployeeAccess\");","map":{"version":3,"names":["useEffect","useState","FETCH_ACCESS_BY_EMAIL","GET_ALL_EMPLOYEE","GET_ALL_EMPLOYEE_ACCESS","GIVE_ACCESS_FOR_EMPLOYEE","jsxDEV","_jsxDEV","Fragment","_Fragment","EmployeeAccess","_s","employees","setEmployees","loading","setLoading","modalData","setModalData","selectedEmployee","setSelectedEmployee","showModal","setShowModal","showGiveAccessModal","setShowGiveAccessModal","allTasks","setAllTasks","taskOrders","setTaskOrders","existingAccess","setExistingAccess","loadingAccess","setLoadingAccess","loadingGiveAccess","setLoadingGiveAccess","loadingAllAccess","setLoadingAllAccess","savingAccess","setSavingAccess","loadingExistingAccess","setLoadingExistingAccess","isAnyLoading","Object","values","some","Boolean","getData","res","status_code","data","error","console","log","getAccessOfEmployee","email","name","alert","prev","employee_email","getExistingAccess","getAllAccess","handleGiveAccess","existingAccessData","allTasksData","initialOrders","forEach","access","matchingTask","find","task","task_name","task_url","_id","order","handleOrderChange","taskId","orderNum","parseInt","handleRemoveTask","newOrders","closeGiveAccessModal","hasExistingAccess","getSortedTasks","length","selectedTasks","unselectedTasks","hasOrder","undefined","push","sort","a","b","orderA","orderB","giveAccessToEmp","employeeEmail","tasksToAssign","tasks","message","handleSaveAccess","tasksWithOrders","entries","filter","_","isNaN","map","t","closeModal","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","scope","employee","index","type","onClick","disabled","tabIndex","style","backgroundColor","Date","createdAt","toLocaleDateString","year","timeZone","month","day","hour","minute","fontSize","maxHeight","overflowY","isExisting","task_purpose","minWidth","placeholder","min","value","onChange","e","target","title","keys","_c","$RefreshReg$"],"sources":["/Users/poojasharma/Desktop/loclase react admin panel/localse-admin-panel/src/src/screens/EmployeeAccess/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { FETCH_ACCESS_BY_EMAIL, GET_ALL_EMPLOYEE, GET_ALL_EMPLOYEE_ACCESS, GIVE_ACCESS_FOR_EMPLOYEE } from \"../../apis/Apis\"\n\nconst EmployeeAccess = () => {\n    const [employees, setEmployees] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [modalData, setModalData] = useState([])\n    const [selectedEmployee, setSelectedEmployee] = useState(null)\n    const [showModal, setShowModal] = useState(false)\n    const [showGiveAccessModal, setShowGiveAccessModal] = useState(false)\n    const [allTasks, setAllTasks] = useState([])\n    const [taskOrders, setTaskOrders] = useState({})\n    const [existingAccess, setExistingAccess] = useState([]) // Store existing access data\n    \n    // Unique loading states\n    const [loadingAccess, setLoadingAccess] = useState({}) // For individual \"Get Access\" buttons\n    const [loadingGiveAccess, setLoadingGiveAccess] = useState({}) // For individual \"Give Access\" buttons\n    const [loadingAllAccess, setLoadingAllAccess] = useState(false) // For fetching all tasks\n    const [savingAccess, setSavingAccess] = useState(false) // For saving access\n    const [loadingExistingAccess, setLoadingExistingAccess] = useState(false) // For fetching existing access\n\n    // Check if any loading is active\n    const isAnyLoading = () => {\n        return loading || \n               Object.values(loadingAccess).some(Boolean) || \n               Object.values(loadingGiveAccess).some(Boolean) || \n               loadingAllAccess || \n               savingAccess ||\n               loadingExistingAccess\n    }\n\n    const getData = async () => {\n        try {\n            setLoading(true)\n            const res = await GET_ALL_EMPLOYEE()\n            if (res.status_code === 200) {\n                setEmployees(res.data)\n            }\n        } catch (error) {\n            console.log(error)\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    const getAccessOfEmployee = async (email, name) => {\n        if (!email) {\n            alert('Employee email is not available')\n            return\n        }\n        \n        try {\n            setLoadingAccess(prev => ({ ...prev, [email]: true }))\n            setSelectedEmployee({ name, email })\n            const res = await FETCH_ACCESS_BY_EMAIL({\n                employee_email: email\n            })\n            \n            if (res.status_code === 200) {\n                setModalData(res.data)\n                setShowModal(true)\n            }\n        } catch (error) {\n            console.log(error)\n            alert('Error fetching employee access data')\n        } finally {\n            setLoadingAccess(prev => ({ ...prev, [email]: false }))\n        }\n    }\n\n    const getExistingAccess = async (email) => {\n        try {\n            setLoadingExistingAccess(true)\n            const res = await FETCH_ACCESS_BY_EMAIL({\n                employee_email: email\n            })\n            \n            if (res.status_code === 200) {\n                return res.data || []\n            }\n            return []\n        } catch (error) {\n            console.log(error)\n            return []\n        } finally {\n            setLoadingExistingAccess(false)\n        }\n    }\n\n    const getAllAccess = async () => {\n        try {\n            setLoadingAllAccess(true)\n            const res = await GET_ALL_EMPLOYEE_ACCESS()\n            if (res.status_code === 200) {\n                return res.data || []\n            }\n            return []\n        } catch (error) {\n            console.log(error)\n            alert('Error fetching available tasks')\n            return []\n        } finally {\n            setLoadingAllAccess(false)\n        }\n    }\n\n    const handleGiveAccess = async (email, name) => {\n        if (!email) {\n            alert('Employee email is not available')\n            return\n        }\n        \n        setLoadingGiveAccess(prev => ({ ...prev, [email]: true }))\n        setSelectedEmployee({ name, email })\n        \n        try {\n            // First get existing access\n            const existingAccessData = await getExistingAccess(email)\n            setExistingAccess(existingAccessData)\n            \n            // Then get all available tasks\n            const allTasksData = await getAllAccess()\n            setAllTasks(allTasksData)\n            \n            // Pre-fill orders for existing tasks\n            const initialOrders = {}\n            existingAccessData.forEach(access => {\n                // Find matching task by task_name or task_url\n                const matchingTask = allTasksData.find(task => \n                    task.task_name === access.task_name || task.task_url === access.task_url\n                )\n                if (matchingTask) {\n                    initialOrders[matchingTask._id] = access.order\n                }\n            })\n            \n            setTaskOrders(initialOrders)\n            setShowGiveAccessModal(true)\n            \n        } catch (error) {\n            console.log(error)\n        } finally {\n            setLoadingGiveAccess(prev => ({ ...prev, [email]: false }))\n        }\n    }\n\n    const handleOrderChange = (taskId, order) => {\n        const orderNum = parseInt(order)\n        \n        // Update task orders\n        setTaskOrders(prev => ({\n            ...prev,\n            [taskId]: orderNum || ''\n        }))\n    }\n\n    const handleRemoveTask = (taskId) => {\n        setTaskOrders(prev => {\n            const newOrders = { ...prev }\n            delete newOrders[taskId]\n            return newOrders\n        })\n    }\n\n    const closeGiveAccessModal = () => {\n        setShowGiveAccessModal(false)\n        setAllTasks([])\n        setSelectedEmployee(null)\n        setTaskOrders({})\n        setExistingAccess([])\n    }\n\n    // Check if task has existing access\n    const hasExistingAccess = (task) => {\n        return existingAccess.some(access => \n            access.task_name === task.task_name || access.task_url === task.task_url\n        )\n    }\n\n    // Sort tasks: selected tasks first, then unselected tasks\n    const getSortedTasks = () => {\n        if (!allTasks || allTasks.length === 0) return []\n        \n        const selectedTasks = []\n        const unselectedTasks = []\n        \n        allTasks.forEach(task => {\n            const hasOrder = taskOrders[task._id] !== undefined && taskOrders[task._id] !== ''\n            if (hasOrder) {\n                selectedTasks.push(task)\n            } else {\n                unselectedTasks.push(task)\n            }\n        })\n        \n        // Sort selected tasks by their order value\n        selectedTasks.sort((a, b) => {\n            const orderA = taskOrders[a._id] || 0\n            const orderB = taskOrders[b._id] || 0\n            return orderA - orderB\n        })\n        \n        return [...selectedTasks, ...unselectedTasks]\n    }\n\n    // Updated function to call the API with actual data\n    const giveAccessToEmp = async (employeeEmail, tasksToAssign) => {\n        try {\n            setSavingAccess(true)\n            const res = await GIVE_ACCESS_FOR_EMPLOYEE({\n                employee_email: employeeEmail,\n                tasks: tasksToAssign\n            })\n            \n            if (res.status_code === 200) {\n                alert(`Successfully assigned ${tasksToAssign.length} tasks to ${selectedEmployee.name}`)\n                closeGiveAccessModal()\n                // Optionally refresh the employee list or their access data\n                getData()\n            } else {\n                alert('Failed to assign access. Please try again.')\n            }\n        } catch (error) {\n            console.log(\"EERR\", error)\n            alert(error.message)\n            alert('Error occurred while assigning access')\n        } finally {\n            setSavingAccess(false)\n        }\n    }\n\n    const handleSaveAccess = () => {\n        // Get tasks with valid orders\n        const tasksWithOrders = Object.entries(taskOrders)\n            .filter(([_, order]) => order !== '' && !isNaN(order))\n            .map(([taskId, order]) => {\n                const task = allTasks.find(t => t._id === taskId)\n                return {\n                    task_name: task.task_name,\n                    task_url: task.task_url,\n                    order: parseInt(order)\n                }\n            })\n        \n        if (tasksWithOrders.length === 0) {\n            alert('Please assign at least one task with a valid order')\n            return\n        }\n\n        // Call the API function with actual data\n        giveAccessToEmp(selectedEmployee.email, tasksWithOrders)\n    }\n\n    const closeModal = () => {\n        setShowModal(false)\n        setModalData([])\n        setSelectedEmployee(null)\n    }\n\n    useEffect(() => {\n        getData()\n    }, [])\n\n    if (loading) {\n        return (\n            <div className=\"container mt-4\">\n                <div className=\"d-flex justify-content-center\">\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <div className=\"container mt-4\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2 className=\"mb-4\">Employee Access Management</h2>\n                        \n                        <div className=\"card shadow\">\n                            <div className=\"card-header bg-primary text-white\">\n                                <h5 className=\"card-title mb-0\">Employees List</h5>\n                            </div>\n                            <div className=\"card-body p-0\">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-striped table-hover mb-0\">\n                                        <thead className=\"table-dark\">\n                                            <tr>\n                                                <th scope=\"col\">#</th>\n                                                <th scope=\"col\">Name</th>\n                                                <th scope=\"col\">Email</th>\n                                                <th scope=\"col\">Actions</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {employees.map((employee, index) => (\n                                                <tr key={index}>\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td>\n                                                        <strong>{employee.name}</strong>\n                                                    </td>\n                                                    <td>\n                                                        {employee.email ? (\n                                                            <span className=\"badge bg-success\">{employee.email}</span>\n                                                        ) : (\n                                                            <span className=\"badge bg-warning text-dark\">No Email</span>\n                                                        )}\n                                                    </td>\n                                                    <td>\n                                                        <div className=\"btn-group\" role=\"group\">\n                                                            <button\n                                                                type=\"button\"\n                                                                className=\"btn btn-info btn-sm me-2\"\n                                                                onClick={() => getAccessOfEmployee(employee.email, employee.name)}\n                                                                disabled={!employee.email || isAnyLoading()}\n                                                            >\n                                                                {loadingAccess[employee.email] ? (\n                                                                    <span className=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\n                                                                ) : (\n                                                                    <i className=\"bi bi-eye me-1\"></i>\n                                                                )}\n                                                                Get Access\n                                                            </button>\n                                                            <button\n                                                                type=\"button\"\n                                                                className=\"btn btn-success btn-sm\"\n                                                                onClick={() => handleGiveAccess(employee.email, employee.name)}\n                                                                disabled={!employee.email || isAnyLoading()}\n                                                            >\n                                                                {loadingGiveAccess[employee.email] ? (\n                                                                    <span className=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\n                                                                ) : (\n                                                                    <i className=\"bi bi-plus-circle me-1\"></i>\n                                                                )}\n                                                                Give Access\n                                                            </button>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Get Access Modal */}\n            {showModal && (\n                <div className=\"modal fade show d-block\" tabIndex=\"-1\" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\n                    <div className=\"modal-dialog modal-lg\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header bg-primary text-white\">\n                                <h5 className=\"modal-title\">\n                                    Access Details for {selectedEmployee?.name}\n                                </h5>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn-close btn-close-white\"\n                                    onClick={closeModal}\n                                    disabled={isAnyLoading()}\n                                ></button>\n                            </div>\n                            <div className=\"modal-body\">\n                                {selectedEmployee && (\n                                    <div className=\"mb-3\">\n                                        <p className=\"mb-1\">\n                                            <strong>Employee:</strong> {selectedEmployee.name}\n                                        </p>\n                                        <p className=\"mb-3\">\n                                            <strong>Email:</strong> {selectedEmployee.email}\n                                        </p>\n                                    </div>\n                                )}\n                                \n                                {modalData.length > 0 ? (\n                                    <div className=\"table-responsive\">\n                                        <table className=\"table table-bordered\">\n                                            <thead className=\"table-light\">\n                                                <tr>\n                                                    <th>Task Name</th>\n                                                    <th>Task URL</th>\n                                                    <th>Order</th>\n                                                    <th>Created At</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {modalData\n                                                    .sort((a, b) => a.order - b.order)\n                                                    .map((access, index) => (\n                                                    <tr key={access._id || index}>\n                                                        <td>\n                                                            <span className=\"badge bg-primary\">\n                                                                {access.task_name}\n                                                            </span>\n                                                        </td>\n                                                        <td>\n                                                            <code>{access.task_url}</code>\n                                                        </td>\n                                                        <td>\n                                                            <span className=\"badge bg-secondary\">\n                                                                {access.order}\n                                                            </span>\n                                                        </td>\n                                                        <td>\n                                                            {new Date(access.createdAt).toLocaleDateString('en-IN', {\n                                                                year: 'numeric',\n                                                                timeZone: 'UTC',\n                                                                month: 'short',\n                                                                day: 'numeric',\n                                                                hour: '2-digit',\n                                                                minute: '2-digit'\n                                                            })}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                ) : (\n                                    <div className=\"text-center py-4\">\n                                        <i className=\"bi bi-exclamation-triangle text-warning\" style={{ fontSize: '3rem' }}></i>\n                                        <h5 className=\"mt-3\">No Access Data Found</h5>\n                                        <p className=\"text-muted\">This employee doesn't have any access permissions assigned.</p>\n                                    </div>\n                                )}\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    onClick={closeModal}\n                                    disabled={isAnyLoading()}\n                                >\n                                    Close\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Give Access Modal */}\n            {showGiveAccessModal && (\n                <div className=\"modal fade show d-block\" tabIndex=\"-1\" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\n                    <div className=\"modal-dialog modal-xl\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header bg-success text-white\">\n                                <h5 className=\"modal-title\">\n                                    Give Access to {selectedEmployee?.name}\n                                </h5>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn-close btn-close-white\"\n                                    onClick={closeGiveAccessModal}\n                                    disabled={isAnyLoading()}\n                                ></button>\n                            </div>\n                            <div className=\"modal-body\" style={{ maxHeight: '70vh', overflowY: 'auto' }}>\n                                {selectedEmployee && (\n                                    <div className=\"mb-4\">\n                                        <div className=\"alert alert-info\">\n                                            <p className=\"mb-1\">\n                                                <strong>Employee:</strong> {selectedEmployee.name}\n                                            </p>\n                                            <p className=\"mb-0\">\n                                                <strong>Email:</strong> {selectedEmployee.email}\n                                            </p>\n                                        </div>\n                                    </div>\n                                )}\n                                \n                                <div className=\"mb-3\">\n                                    <div className=\"alert alert-info\">\n                                        <small>\n                                            <strong>Note:</strong> Assign order numbers to the tasks you want to give access to. \n                                            Tasks with existing access are pre-filled and highlighted. Selected tasks appear at the top.\n                                        </small>\n                                    </div>\n                                </div>\n\n                                {loadingExistingAccess || loadingAllAccess ? (\n                                    <div className=\"text-center py-4\">\n                                        <div className=\"spinner-border text-primary\" role=\"status\">\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </div>\n                                        <p className=\"mt-2\">\n                                            {loadingExistingAccess ? 'Loading existing access...' : 'Loading available tasks...'}\n                                        </p>\n                                    </div>\n                                ) : allTasks.length > 0 ? (\n                                    <div className=\"table-responsive\">\n                                        <table className=\"table table-striped\">\n                                            <thead className=\"table-dark\">\n                                                <tr>\n                                                    <th>Task Name</th>\n                                                    <th>Task URL</th>\n                                                    <th>Task Purpose</th>\n                                                    <th>Order</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {getSortedTasks().map((task) => {\n                                                    const isExisting = hasExistingAccess(task)\n                                                    const hasOrder = taskOrders[task._id] !== undefined && taskOrders[task._id] !== ''\n                                                    \n                                                    return (\n                                                        <tr key={task._id} className={`${isExisting ? 'table-warning' : ''} ${hasOrder && !isExisting ? 'table-success' : ''}`}>\n                                                            <td>\n                                                                <strong>{task.task_name}</strong>\n                                                                {isExisting && (\n                                                                    <span className=\"badge bg-warning text-dark ms-2\">Existing</span>\n                                                                )}\n                                                                {hasOrder && !isExisting && (\n                                                                    <span className=\"badge bg-success ms-2\">Selected</span>\n                                                                )}\n                                                            </td>\n                                                            <td>\n                                                                <code className=\"text-primary\">{task.task_url}</code>\n                                                            </td>\n                                                            <td>\n                                                                <small className=\"text-muted\">{task.task_purpose}</small>\n                                                            </td>\n                                                            <td style={{ minWidth: '150px' }}>\n                                                                <div className=\"input-group input-group-sm\">\n                                                                    <input\n                                                                        type=\"number\"\n                                                                        className={`form-control ${\n                                                                            hasOrder ? 'is-valid' : ''\n                                                                        }`}\n                                                                        placeholder=\"Order\"\n                                                                        min=\"1\"\n                                                                        value={taskOrders[task._id] || ''}\n                                                                        onChange={(e) => handleOrderChange(task._id, e.target.value)}\n                                                                        disabled={isAnyLoading()}\n                                                                    />\n                                                                    {hasOrder && (\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn btn-outline-danger btn-sm\"\n                                                                            onClick={() => handleRemoveTask(task._id)}\n                                                                            disabled={isAnyLoading()}\n                                                                            title=\"Remove task\"\n                                                                        >\n                                                                            <i className=\"bi bi-x-lg\"></i>\n                                                                        </button>\n                                                                    )}\n                                                                </div>\n                                                            </td>\n                                                        </tr>\n                                                    )\n                                                })}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                ) : (\n                                    <div className=\"text-center py-4\">\n                                        <i className=\"bi bi-exclamation-triangle text-warning\" style={{ fontSize: '3rem' }}></i>\n                                        <h5 className=\"mt-3\">No Tasks Available</h5>\n                                        <p className=\"text-muted\">No tasks are available to assign.</p>\n                                    </div>\n                                )}\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    onClick={closeGiveAccessModal}\n                                    disabled={isAnyLoading()}\n                                >\n                                    Cancel\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-success\"\n                                    onClick={handleSaveAccess}\n                                    disabled={Object.keys(taskOrders).length === 0 || isAnyLoading()}\n                                >\n                                    {savingAccess ? (\n                                        <>\n                                            <span className=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\n                                            Saving...\n                                        </>\n                                    ) : (\n                                        <>\n                                            <i className=\"bi bi-check-circle me-1\"></i>\n                                            Save Access ({Object.keys(taskOrders).length} tasks)\n                                        </>\n                                    )}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default EmployeeAccess"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}