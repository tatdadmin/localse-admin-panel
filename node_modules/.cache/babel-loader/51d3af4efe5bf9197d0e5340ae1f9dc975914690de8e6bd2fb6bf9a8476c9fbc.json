{"ast":null,"code":"import axios from \"axios\";\nimport { API_BASE_URL } from \"../constant/path\";\nimport store from \"../redux/store\";\nimport { setUserAuthStates } from \"../redux/slices/userAuthSlice\";\n\n// ðŸ”§ Axios instance setup\nconst axiosClient = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// âœ… Request Interceptor - Attach Bearer Token\naxiosClient.interceptors.request.use(config => {\n  const token = store.getState().userAuth.jwt;\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// âœ… Response Interceptor - Handle Token Expiry\naxiosClient.interceptors.response.use(response => response, async error => {\n  var _error$response, _error$response2, _error$response3, _error$response3$data, _error$response4;\n  const originalRequest = error.config;\n  const refreshToken = store.getState().userAuth.refreshToken;\n\n  // If token expired and retry not attempted yet\n  if ((((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) && !originalRequest._retry && ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) === \"Token has expired\") {\n    originalRequest._retry = true;\n    try {\n      var _res$data;\n      const res = await axios.post(`${API_BASE_URL}auth/refresh`, {\n        refresh_token: refreshToken\n      });\n      if ((_res$data = res.data) !== null && _res$data !== void 0 && _res$data.jwt) {\n        // Save new token to Redux\n        store.dispatch(setUserAuthStates({\n          key: \"jwt\",\n          value: res.data.jwt\n        }));\n        axiosClient.defaults.headers.Authorization = `Bearer ${res.data.jwt}`;\n        originalRequest.headers.Authorization = `Bearer ${res.data.jwt}`;\n        return axiosClient(originalRequest);\n      }\n    } catch (refreshError) {\n      // Force logout on refresh failure\n      store.dispatch(setUserAuthStates({\n        key: \"jwt\",\n        value: null\n      }));\n      store.dispatch(setUserAuthStates({\n        key: \"login\",\n        value: false\n      }));\n      return Promise.reject(refreshError);\n    }\n  }\n\n  // Logout on hard 403 or failed refresh\n  if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 403) {\n    store.dispatch(setUserAuthStates({\n      key: \"jwt\",\n      value: null\n    }));\n    store.dispatch(setUserAuthStates({\n      key: \"login\",\n      value: false\n    }));\n  }\n  return Promise.reject(error);\n});\nconst fetchService = async (method, path, body = {}, headers = {}) => {\n  try {\n    const isFormData = body instanceof FormData;\n    const response = await axiosClient({\n      method,\n      url: path,\n      data: method !== \"GET\" ? body : undefined,\n      params: method === \"GET\" ? body : undefined,\n      headers: {\n        ...headers,\n        ...(isFormData ? {} : {\n          \"Content-Type\": \"application/json\"\n        })\n      }\n    });\n    console.log(response, \"API\");\n    if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n      return response.data;\n    } else {\n      var _response$data;\n      throw new Error(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message) || \"Request failed.\");\n    }\n  } catch (error) {\n    var _error$response5;\n    console.error(`[fetchService] Error at ${path}:`, error);\n    throw (error === null || error === void 0 ? void 0 : (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message || \"Unknown error\";\n  }\n};\nexport default fetchService;","map":{"version":3,"names":["axios","API_BASE_URL","store","setUserAuthStates","axiosClient","create","baseURL","interceptors","request","use","config","token","getState","userAuth","jwt","headers","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$response3","_error$response3$data","_error$response4","originalRequest","refreshToken","status","_retry","data","message","_res$data","res","post","refresh_token","dispatch","key","value","defaults","refreshError","fetchService","method","path","body","isFormData","FormData","url","undefined","params","console","log","_response$data","Error","_error$response5"],"sources":["/Users/poojasharma/Desktop/loclase react admin panel/localse-admin-panel/src/src/apis/Service2.js"],"sourcesContent":["import axios from \"axios\";\nimport { API_BASE_URL } from \"../constant/path\";\nimport store from \"../redux/store\";\nimport { setUserAuthStates } from \"../redux/slices/userAuthSlice\";\n\n// ðŸ”§ Axios instance setup\nconst axiosClient = axios.create({\n  baseURL: API_BASE_URL,\n});\n\n// âœ… Request Interceptor - Attach Bearer Token\naxiosClient.interceptors.request.use(\n  (config) => {\n    const token = store.getState().userAuth.jwt;\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// âœ… Response Interceptor - Handle Token Expiry\naxiosClient.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    const refreshToken = store.getState().userAuth.refreshToken;\n\n    // If token expired and retry not attempted yet\n    if (\n      (error.response?.status === 401 || error.response?.status === 403) &&\n      !originalRequest._retry &&\n      error.response?.data?.message === \"Token has expired\"\n    ) {\n      originalRequest._retry = true;\n      try {\n        const res = await axios.post(`${API_BASE_URL}auth/refresh`, {\n          refresh_token: refreshToken,\n        });\n\n        if (res.data?.jwt) {\n          // Save new token to Redux\n          store.dispatch(setUserAuthStates({ key: \"jwt\", value: res.data.jwt }));\n          axiosClient.defaults.headers.Authorization = `Bearer ${res.data.jwt}`;\n          originalRequest.headers.Authorization = `Bearer ${res.data.jwt}`;\n          return axiosClient(originalRequest);\n        }\n      } catch (refreshError) {\n        // Force logout on refresh failure\n        store.dispatch(setUserAuthStates({ key: \"jwt\", value: null }));\n        store.dispatch(setUserAuthStates({ key: \"login\", value: false }));\n        return Promise.reject(refreshError);\n      }\n    }\n\n    // Logout on hard 403 or failed refresh\n    if (error.response?.status === 403) {\n      store.dispatch(setUserAuthStates({ key: \"jwt\", value: null }));\n      store.dispatch(setUserAuthStates({ key: \"login\", value: false }));\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n\nconst fetchService = async (method, path, body = {}, headers = {}) => {\n    try {\n      const isFormData = body instanceof FormData;\n  \n      const response = await axiosClient({\n        method,\n        url: path,\n        data: method !== \"GET\" ? body : undefined,\n        params: method === \"GET\" ? body : undefined,\n        headers: {\n          ...headers,\n          ...(isFormData ? {} : { \"Content-Type\": \"application/json\" }),\n        },\n      });\n  console.log(response,\"API\")\n      if (response?.status == 200) {\n        return response.data;\n      } else {\n        throw new Error(response.data?.message || \"Request failed.\");\n      }\n    } catch (error) {\n      console.error(`[fetchService] Error at ${path}:`, error);\n      throw error?.response?.data || error.message || \"Unknown error\";\n    }\n  };\n  \n  export default fetchService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}