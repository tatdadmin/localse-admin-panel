{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport userAuth from \"./slices/userAuthSlice\";\nimport { thunk } from \"redux-thunk\";\nimport persistReducer from \"redux-persist/es/persistReducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore } from \"redux-persist\";\nimport NoticeSlice from \"./slices/NoticeSlice\";\nconst rootReducer = combineReducers({\n  userAuth,\n  NoticeSlice\n});\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  whitelist: [\"userAuth\"],\n  blacklist: ['NoticeSlice']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleware = [thunk];\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }).concat(middleware)\n});\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","userAuth","thunk","persistReducer","storage","persistStore","NoticeSlice","rootReducer","persistConfig","key","whitelist","blacklist","persistedReducer","middleware","store","reducer","getDefaultMiddleware","serializableCheck","concat","persistor"],"sources":["D:/localse/localse-admin-panel/src/src/redux/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport userAuth from \"./slices/userAuthSlice\";\r\nimport { thunk } from \"redux-thunk\";\r\nimport persistReducer from \"redux-persist/es/persistReducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport NoticeSlice from \"./slices/NoticeSlice\";\r\nconst rootReducer = combineReducers({\r\n  userAuth,\r\n  NoticeSlice\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: storage,\r\n  whitelist: [\"userAuth\"],\r\n  blacklist:['NoticeSlice']\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nconst middleware = [thunk];\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({ serializableCheck: false }).concat(middleware),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,eAAe,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,KAAK,QAAQ,aAAa;AACnC,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,MAAMC,WAAW,GAAGP,eAAe,CAAC;EAClCC,QAAQ;EACRK;AACF,CAAC,CAAC;AAEF,MAAME,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXL,OAAO,EAAEA,OAAO;EAChBM,SAAS,EAAE,CAAC,UAAU,CAAC;EACvBC,SAAS,EAAC,CAAC,aAAa;AAC1B,CAAC;AAED,MAAMC,gBAAgB,GAAGT,cAAc,CAACK,aAAa,EAAED,WAAW,CAAC;AACnE,MAAMM,UAAU,GAAG,CAACX,KAAK,CAAC;AAE1B,MAAMY,KAAK,GAAGf,cAAc,CAAC;EAC3BgB,OAAO,EAAEH,gBAAgB;EACzBC,UAAU,EAAGG,oBAAoB,IAC/BA,oBAAoB,CAAC;IAAEC,iBAAiB,EAAE;EAAM,CAAC,CAAC,CAACC,MAAM,CAACL,UAAU;AACxE,CAAC,CAAC;AAEF,OAAO,MAAMM,SAAS,GAAGd,YAAY,CAACS,KAAK,CAAC;AAC5C,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}